.include "../50002/nominal.jsim"
.include "../50002/stdcell.jsim"
.include "../50002/lab3checkoff_10.jsim"


*****************************************************************************************************************************************************************************
// 1-bit adder
.subckt fulladder a b ci s co
Xxor1 a  b 1  xor2
Xxor2 ci 1 s  xor2
Xand1 a  b 2  and2
Xand2 ci 1 3  and2
Xor1  2  3 co or2
.ends

// 1-bit adder

// 32 bit adder
.subckt adder32 ALUFN[0] A[31:0] B[31:0] S[31:0] z v n

// invert b
Xor_b   B[31:0] ALUFN[0]#32 XB[31:0] xor2
Xadder0 A[0] XB[0] ALUFN0 S[0] C0 fulladder
Xadder  A[31:1] XB[31:1] C[30:0] S[31:1] C[31:1] fulladder

// Z==1 if all=0 else 0
Xnor1 S[3:0]   node1 nor4
Xnor2 S[7:4]   node2 nor4
Xnor3 S[11:8]  node3 nor4
Xnor4 S[15:12] node4 nor4
Xnor5 S[19:16] node5 nor4
Xnor6 S[23:20] node6 nor4
Xnor7 S[27:24] node7 nor4
Xnor8 S[31:28] node8 nor4
Xand1 node1 node2 node3 node4 out1 and4
Xand2 node5 node6 node7 node8 out2 and4
Xand3 out1 out2 z and2

// V addition overflows
Xinva A[31] Ainv inverter_2
Xinvb XB[31] Binv inverter_2
Xinvs S[31] Sinv inverter_2
Xand4 A[31] XB[31] Sinv out3 and3
Xand5 Ainv Binv S[31] out4 and3
Xor1  out3 out4 v or2

// N negative or not
Xbuffer S[31] n buffer
.ends


*****************************************************************************************************************************************************************************
.subckt boole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0]
Xmux A[31:0] B[31:0] ALUFN[0]#32 ALUFN[1]#32 ALUFN[2]#32 ALUFN[3]#32 boole[31:0] mux4
.ends

*****************************************************************************************************************************************************************************
// 32-bit comparator
.subckt compare32 ALUFN[2:1] z v n cmp[31:0]
.connect cmp[31:1] 0
Xxor n v 1 xor2
Xor  1 z 2 or2
Xmux ALUFN[1] AlUFN[2] 0 z 1 2 cmp[0] mux4
.ends

*****************************************************************************************************************************************************************************
.subckt leftshifter A[31:0] B[4:0] in SL[31:0]
Xmux1 B[4]#32 A[31:0] A[15:0] in#16 W[31:0]  mux2
Xmux2 B[3]#32 W[31:0] W[23:0] in#8  X[31:0]  mux2
Xmux3 B[2]#32 X[31:0] X[27:0] in#4  Y[31:0]  mux2
Xmux4 B[1]#32 Y[31:0] Y[29:0] in#2  Z[31:0]  mux2
Xmux5 B[0]#32 Z[31:0] Z[30:0] in#1  SL[31:0] mux2
.ends

.subckt shift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0]
Xand   A[31] ALUFN[1] fill and2
Xleft  A[31:0] B[4:0] 0    left[31:0]  leftshifter
Xright A[0:31] B[4:0] fill right[0:31] leftshifter
Xmux   ALUFN[0]#32 left[31:0] right[31:0] shift[31:0] mux2
.ends
*****************************************************************************************************************************************************************************
// full adder for multiply
.subckt FA a b ain cin s co
Xand a   b   bin and2
Xfa  ain bin cin s co fulladder
.ends

//multiply32 bit
.subckt multiply A[31:0] B[31:0] alu[31:0]
//the first row
Xand1 A[31:0] B0#32  P[31:0] and2
Xbuf0 P[0]    alu[0] buffer

// a cascade of buffer
Xadder1     A[30:0]   B1#31   P[31:1]        C1_[30:1]    0  P1_[31:1]      C1_[31:1]      FA
Xadder2     A[29:0]   B2#30   P1_[31:2]      C2_[30:2]    0  P2_[31:2]      C2_[31:2]      FA
Xadder3     A[28:0]   B3#29   P2_[31:3]      C3_[30:3]    0  P3_[31:3]      C3_[31:3]      FA
Xadder4     A[27:0]   B4#28   P3_[31:4]      C4_[30:4]    0  P4_[31:4]      C4_[31:4]      FA
Xadder5     A[26:0]   B5#27   P4_[31:5]      C5_[30:5]    0  P5_[31:5]      C5_[31:5]      FA
Xadder6     A[25:0]   B6#26   P5_[31:6]      C6_[30:6]    0  P6_[31:6]      C6_[31:6]      FA
Xadder7     A[24:0]   B7#25   P6_[31:7]      C7_[30:7]    0  P7_[31:7]      C7_[31:7]      FA
Xadder8     A[23:0]   B8#24   P7_[31:8]      C8_[30:8]    0  P8_[31:8]      C8_[31:8]      FA
Xadder9     A[22:0]   B9#23   P8_[31:9]      C9_[30:9]    0  P9_[31:9]      C9_[31:9]      FA
Xadder10    A[21:0]   B10#22  P9_[31:10]     C10_[30:10]  0  P10_[31:10]    C10_[31:10]    FA
Xadder11    A[20:0]   B11#21  P10_[31:11]    C11_[30:11]  0  P11_[31:11]    C11_[31:11]    FA
Xadder12    A[19:0]   B12#20  P11_[31:12]    C12_[30:12]  0  P12_[31:12]    C12_[31:12]    FA
Xadder13    A[18:0]   B13#19  P12_[31:13]    C13_[30:13]  0  P13_[31:13]    C13_[31:13]    FA
Xadder14    A[17:0]   B14#18  P13_[31:14]    C14_[30:14]  0  P14_[31:14]    C14_[31:14]    FA
Xadder15    A[16:0]   B15#17  P14_[31:15]    C15_[30:15]  0  P15_[31:15]    C15_[31:15]    FA
Xadder16    A[15:0]   B16#16  P15_[31:16]    C16_[30:16]  0  P16_[31:16]    C16_[31:16]    FA
Xadder17    A[14:0]   B17#15  P16_[31:17]    C17_[30:17]  0  P17_[31:17]    C17_[31:17]    FA
Xadder18    A[13:0]   B18#14  P17_[31:18]    C18_[30:18]  0  P18_[31:18]    C18_[31:18]    FA
Xadder19    A[12:0]   B19#13  P18_[31:19]    C19_[30:19]  0  P19_[31:19]    C19_[31:19]    FA
Xadder20    A[11:0]   B20#12  P19_[31:20]    C20_[30:20]  0  P20_[31:20]    C20_[31:20]    FA
Xadder21    A[10:0]   B21#11  P20_[31:21]    C21_[30:21]  0  P21_[31:21]    C21_[31:21]    FA
Xadder22    A[9:0]    B22#10  P21_[31:22]    C22_[30:22]  0  P22_[31:22]    C22_[31:22]    FA
Xadder23    A[8:0]    B23#9   P22_[31:23]    C23_[30:23]  0  P23_[31:23]    C23_[31:23]    FA
Xadder24    A[7:0]    B24#8   P23_[31:24]    C24_[30:24]  0  P24_[31:24]    C24_[31:24]    FA
Xadder25    A[6:0]    B25#7   P24_[31:25]    C25_[30:25]  0  P25_[31:25]    C25_[31:25]    FA
Xadder26    A[5:0]    B26#6   P25_[31:26]    C26_[30:26]  0  P26_[31:26]    C26_[31:26]    FA
Xadder27    A[4:0]    B27#5   P26_[31:27]    C27_[30:27]  0  P27_[31:27]    C27_[31:27]    FA
Xadder28    A[3:0]    B28#4   P27_[31:28]    C28_[30:28]  0  P28_[31:28]    C28_[31:28]    FA
Xadder29    A[2:0]    B29#3   P28_[31:29]    C29_[30:29]  0  P29_[31:29]    C29_[31:29]    FA
Xadder30    A[1:0]    B30#2   P29_[31:30]    C30_[30:30]  0  P30_[31:30]    C30_[31:30]    FA
Xadder31    A[0:0]    B31#1   P30_[31:31]                 0  P31_[31:31]    C31_[31:31]    FA
Xbuf1  P1_[1]    alu[1]   buffer
Xbuf2  P2_[2]    alu[2]   buffer
Xbuf3  P3_[3]    alu[3]   buffer
Xbuf4  P4_[4]    alu[4]   buffer
Xbuf5  P5_[5]    alu[5]   buffer
Xbuf6  P6_[6]    alu[6]   buffer
Xbuf7  P7_[7]    alu[7]   buffer
Xbuf8  P8_[8]    alu[8]   buffer
Xbuf9  P9_[9]    alu[9]   buffer
Xbuf10 P10_[10]  alu[10]  buffer
Xbuf11 P11_[11]  alu[11]  buffer
Xbuf12 P12_[12]  alu[12]  buffer
Xbuf13 P13_[13]  alu[13]  buffer
Xbuf14 P14_[14]  alu[14]  buffer
Xbuf15 P15_[15]  alu[15]  buffer
Xbuf16 P16_[16]  alu[16]  buffer
Xbuf17 P17_[17]  alu[17]  buffer
Xbuf18 P18_[18]  alu[18]  buffer
Xbuf19 P19_[19]  alu[19]  buffer
Xbuf20 P20_[20]  alu[20]  buffer
Xbuf21 P21_[21]  alu[21]  buffer
Xbuf22 P22_[22]  alu[22]  buffer
Xbuf23 P23_[23]  alu[23]  buffer
Xbuf24 P24_[24]  alu[24]  buffer
Xbuf25 P25_[25]  alu[25]  buffer
Xbuf26 P26_[26]  alu[26]  buffer
Xbuf27 P27_[27]  alu[27]  buffer
Xbuf28 P28_[28]  alu[28]  buffer
Xbuf29 P29_[29]  alu[29]  buffer
Xbuf30 P30_[30]  alu[30]  buffer
Xbuf31 P31_[31]  alu[31]  buffer
.ends
*****************************************************************************************************************************************************************************
.subckt alu ALUFN[5:0] A[31:0] B[31:0] alu[31:0] z v n
Xadder ALUFN[0]    A[31:0]     B[31:0] adder[31:0] z v n adder32
Xboole ALUFN[3:0]  A[31:0]     B[31:0] boole[31:0] boole32
Xshift ALUFN[1:0]  A[31:0]     B[4:0]  shift[31:0] shift32
Xcmp   ALUFN[2:1]  z           v       n         cmp[31:0] compare32
Xmux1  A[31:0]     B[31:0]     mult[31:0] multiply
Xmux2  ALUFN[1]#32 adder[31:0] mult[31:0] arith[31:0] mux2
Xmux3  ALUFN[4]#32 ALUFN[5]#32 arith[31:0] boole[31:0] shift[31:0] cmp[31:0] alu[31:0] mux4
.ends